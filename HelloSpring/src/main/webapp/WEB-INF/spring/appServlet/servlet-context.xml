<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	<!-- resolver로서 view를 찾아서 반환하는 클래스 -->
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.spring.hellospring" />
	<!--  기본으로 -->
	<!-- <beans:bean class="com.spring.hellospring.model.vo.Employee" id="employee" /> -->

			
	<!-- 객체 생성 시 -->		
	<!--
	 <beans:bean class="com.spring.hellospring.model.vo.Employee" id="employee">
		<beans:property name="empNo" value="1"/>
		<beans:property name="empName" value="김태희"/>
		<beans:property name="email" value="th@naver.com"/>	
		<beans:property name="dept" ref="department"/>
	</beans:bean> 
	-->
	
	<!--
	
	
	 <beans:bean id = "employee1" class="com.spring.hellospring.model.vo.Employee">
	 </beans:bean>
		
		중복 X  물론 qualifier로 잡을 수는 있음 (동일한 타입을 여러 개 써야하는 경우 쓰면 되겠죠?)
	 -->
	
	<!-- 기본으로 생성  -->
	<beans:bean class="com.spring.hellospring.model.vo.Department" id="department">
		<beans:constructor-arg index="0" value="D1"/>
		<beans:constructor-arg index="1" value="100"/>
		
		<!-- 가독성 때문에 이렇게 잘 안합니다. -->
	</beans:bean>
	
	
	<!-- 
	
	
		bean을 등록하는 방법이 이 이외에 2가지가 더 있다.
		
		1. @Configuration  어노테이션을 선언한 클래스를 작성하는 방법
			
				>> 
					@Configuration 
					public class test(){
						@bean 어노테이션을 이용해서 객체를 반환하는 메소드를 선언
							이렇게 사용하려면 베이스 스캔 패키지 안에서 선언해야한다. 
						
						@Bean
						public Employee getEmp(){
							
							return new Employee();
						}
					}
		
		2. 선언한 클래스 Bean으로 등록하기
		
			>> 클래스 선언부에 어노테이션을 추가한다. 
				@component(기본 bean),
				MVC 패턴의 기능, 역할에 맞춰서 Bean을 등록
				
				@controller, @service, @Repository(DAO)
				
				: 역할에 따라서 살짝식 다른 느낌
	
	
	 -->
	
</beans:beans>

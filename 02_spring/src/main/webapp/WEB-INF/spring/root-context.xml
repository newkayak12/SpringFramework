<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
		
	<!-- jdbc -->
	<bean id = "realdatasource" class ="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
	 	<property name="url" value="jdbc:oracle:thin:@rclass.iptime.org:8877:xe"/>
	 	<property name="username" value="springtest"/>
	 	<property name="password" value="springtest"/>
	</bean>	
	
	<!-- 
		sql도 log4J로
		원래 데이터 소스가 factory에 들어가는게 아니라 proxy객체인 log4jdbc가 대신 들어간다.
	 -->
	<bean id="datasource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
		<constructor-arg index="0" ref="realdatasource"/>
		<property name="logFormatter">
			<bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
				<property name="loggingType" value="MULTI_LINE"/>
				<property name="sqlPrefix" value="[SQL] "/>
			</bean>
		</property>
	</bean>
	
	<bean id="sqlSessionFacotryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="datasource"/>
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<property name="mapperLocations" value="classpath*:mapper/**/*.xml"/>
	</bean>
	<bean id="sqlSessionTemplate" class ="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFacotryBean"/>
	</bean>
	
	
	<!-- 트랜잭션 매니저 등록하기 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="datasource"/>
	</bean>
	
	<!-- 트랜잭션을 묶어서 처리하도록 (@Transactional을 활용하기 위해서는) 추가설정을 해야함 -->
	<!-- <tx:annotation-driven transaction-manager="transactionManager"/> -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="board*" />
		</tx:attributes>
	</tx:advice>
	
	<aop:config proxy-target-class="true">
		<aop:pointcut expression="execution(* com.kh.spring..*ServiceImpl.*(..))" id="txp" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txp"/>
	</aop:config>
	
	
</beans>

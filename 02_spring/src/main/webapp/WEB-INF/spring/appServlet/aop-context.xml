<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<!-- 
		AOP설정하기
	1. aop:config태그를 이용
		aop:aspect태그를 자식으로 가진다. 여기서 클래스를 등록한다.  (먼저 bean으로 등록 되어있어야)
		  그 자식으로 aop:pointcout (표현식으로 작성)
		  		  	aop:advisor(before||after||around||after returning|| after throwing 이 들어감)
				
		
		
	 -->
	 
	 <bean id="loggerAspect" class="com.kh.spring.common.aop.LoggerAspect" />
	 
	 

	<aop:aspectj-autoproxy />


	<!-- 
	 <aop:config>
	 	<aop:aspect ref="loggerAspect">
	 		<aop:pointcut expression="execution(* com.kh.spring.memo..*(..))" id="loggerPC"/>
			<aop:before method="loggerBefore" pointcut-ref="loggerPC"/>
	 	</aop:aspect>
	 </aop:config> 
	 -->

</beans>
